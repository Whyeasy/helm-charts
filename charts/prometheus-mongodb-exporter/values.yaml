# affinity -- Node/pod affinities
affinity: {}

# annotations -- Annotations to be added to the pods
annotations: {}

#extraArgs -- The extra command line arguments to pass to the MongoDB Exporter
extraArgs:
- --collect.collection
- --collect.database
- --collect.indexusage
- --collect.topmetrics
- --collect.connpoolstats

# fullnameOverride -- Override the full chart name
fullnameOverride: ""

image:
  # image.pullPolicy -- Image pull policy for images
  pullPolicy: IfNotPresent
  # image.repository -- Image repository for images
  repository: ssheehy/mongodb-exporter
  # image.tag -- Image tag for image
  tag: 0.10.0

# imagePullSecrets -- List of container registry secrets
imagePullSecrets: []

livenessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

mongodb:
  # mongodb.secretName -- Secret name containing the MongoDB URI.
  secretName: # Needs to be provided
  # mongodb.secretKey -- Key within the secret containing the MongoDB URI.
  secretKey: # Needs to be provided

# nameOverride -- Override the application name
nameOverride: ""

# nodeSelector -- Add Node labels for pod assginment
nodeSelector: {}

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/port: "metrics"

# port -- The container port to listen on
port: "9216"

# priorityClassName -- Pod priority class name
priorityClassName: ""

readinessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

# replicas -- Number of replicas for the deployment
replicas: 1

# resources -- Custom Resources for the deployment
resources: {}
# limits:
#   cpu: 250m
#   memory: 192Mi
# requests:
#   cpu: 100m
#   memory: 128Mi


# env -- Extra environment variables passed to pod
env: []

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["all"]
  readOnlyRootFilesystem: true
  runAsGroup: 10000
  runAsNonRoot: true
  runAsUser: 10000

service:
  # service.annotations -- 	Annotations to be added to the service
  annotations: {}
  # service.port -- The port to expose
  port: 9216
  # service.type -- The type of service to expose
  type: ClusterIP

serviceAccount:
  # serviceAccount.create -- If true, create the service account
  create: true
  # If create is true and name is not set, then a name is generated using the
  # fullname template.
  # serviceAccount.name -- Name of the service account
  name:


serviceMonitor:
  # serviceMonitor.enabled -- Enable service monitor for the Prometheus Operator
  enabled: true
  # serviceMonitor.interval -- Interval at which metrics should be scraped
  interval: 30s
  # serviceMonitor.scrapeTimeout -- Interval at which metric scrapes should time out
  scrapeTimeout: 10s
  # serviceMonitor.additionalLabels -- Additional labels to add to the ServiceMonitor
  additionalLabels: {}

# tolerations -- Add tolerations for pod assignment 
tolerations: []
