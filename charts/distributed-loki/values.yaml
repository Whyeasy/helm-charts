loki:
  # loki.image -- Image repository for Loki images.
  image: grafana/loki:2.0.0
  # loki.pullPolicy -- Image pull policy for Loki images.
  pullPolicy: IfNotPresent
  # loki.userBoltDBShipper -- Enable Index bucket storage.
  useBoltDBShipper: false
  # loki.config -- Provide the config for Loki.
  config: ""

memberlist:
  # memberlist.enable -- Enable the ring to be a Meberslist. This will disable consul.
  enable: true
  # memberlist.port -- Port to listen on for gossip messages.
  port: 7946

distributor:
  # distributor.replicaCount -- Number of replicas for the Distributor deployment.
  replicaCount: 3
  # distributor.resources -- Custom resources for the Distributor deployment.
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 500Mi
  # distributor.env -- Allow Extra env variables into the deployment
  env: []
  # distributor.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # distributor.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # distributor.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # distributor.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # distributor.affinity -- Replace default affinity with custom affinity
  affinity: {}

gateway:
  # gateway.replicaCount -- Number of replicas for the Gateway deployment.
  replicaCount: 3
  # gateway.image -- Image repository for the Gateway images.
  image: nginx:1.18.0-alpine
  # gateway.pullPolicy -- Image pull policy for the Gateway images.
  pullPolicy: IfNotPresent
  # gateway.resources -- Custom resources for the Gateway deployment.
  resources:
    requests:
      cpu: 50m
      memory: 100Mi
  # gateway.env -- Allow Extra env variables into the deployment
  env: []
  # gateway.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # gateway.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  service:
    #gateway.service.annotations -- Annotations to apply on gateway service
    annotations: {}
    #gateway.service.type -- Service type
    type: ClusterIP
  ingress:
    # gateway.ingress.enabled -- Enable Ingress for your gateway deployment
    enabled: false
    # gateway.ingress.annotations -- 
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    host: chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  # gateway.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # gateway.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # gateway.affinity -- Replace default affinity with custom affinity
  affinity: {}

ingester:
  # ingester.replicaCount -- Number of replicas for the Ingester deployment.
  replicaCount: 3
  # ingester.resources -- Custom resources for the Ingester deployment.
  resources:
    limits:
      cpu: 2
      memory: 10Gi
    requests:
      cpu: 1
      memory: 5Gi
  # ingester.env -- Allow Extra env variables into the deployment
  env: []
  # ingester.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # ingester.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []

  # ingester.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # ingester.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # ingester.affinity -- Replace default affinity with custom affinity
  affinity: {}
  persistence:
    # ingester.persistence.size -- Specify disk size for Ingester persistence storage
    size: 10Gi
    # ingester.persistence.storageClass -- Specify custom storageClass to use.
    storageClass: "standard"


memcached:
  # memcached.replicaCount -- Number of replicas for the Memcached deployment.
  replicaCount: 3
  # memcached.image -- Image repository for the Memcached images.
  image: memcached:1.6.7-alpine
  # memcached.pullPolicy -- Image pull policy for the Memcached images.
  pullPolicy: IfNotPresent
  # memcached.resources -- Custom resources for the Memcached deployment.
  resources:
    limits:
      cpu: 3
      memory: 6Gi
    requests:
      cpu: 500m
      memory: 5Gi
  # memcached.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # memcached.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcached.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedFrontend:
  # memcachedFrontend.replicaCount -- Number of replicas for the Memcached-frontend deployment.
  replicaCount: 3
  # memcachedFrontend.resources -- Custom resources for the Memcached-frontend deployment.
  resources:
    limits:
      cpu: 3
      memory: 1546Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedFrontend.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # memcachedFrontend.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedIndexQueries:
  # memcachedIndexQueries.replicaCount -- Number of replicas for the Memcached-index-queries deployment.
  replicaCount: 3
  # memcachedIndexQueries.resources -- Custom resources for the Memcached-index-queries deployment.
  resources:
    limits:
      cpu: 3
      memory: 1536Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedIndexQueries.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # memcachedIndexQueries.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedIndexQueries.affinity -- Add custom affinity to deployment
  affinity: {}

memcachedIndexWrites:
  # memcachedIndexWrites.replicaCount -- Number of replicas for the Memcached-index-writes deployment.
  replicaCount: 3
  # memcachedIndexWrites.resources -- Custom resources for the Memcached-index-writes deployment.
  resources:
    limits:
      cpu: 3
      memory: 1536Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedIndexWrites.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # memcachedIndexWrites.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedIndexWrites.affinity -- Replace default affinity with custom affinity
  affinity: {}

querier:
  # querier.replicaCount -- Number of replicas for the Querier deployment.
  replicaCount: 3
  # querier.resources -- Custom resources for the Querier deployment.
  resources: {}
  # querier.env -- Allow Extra env variables into the deployment
  env: []
  # querier.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querier.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querier.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # querier.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # querier.affinity -- Replace default affinity with custom affinity
  affinity: {}
  persistence:
    # querier.persistence.size -- Specify disk size for Querier persistence storage
    size: 10Gi
    # querier.persistence.storageClass -- Specify custom storageClass to use.
    storageClass: "standard"


querierFrontend:
  # querierFrontend.replicaCount -- Number of replicas for the Querier-frontend deployment.
  replicaCount: 2
  # querierFrontend.resources -- Customer resources for the Querier-frontend deployment.
  resources:
    limits:
      memory: 1200Mi
    requests:
      cpu: "2"
      memory: 600Mi
  # querierFrontend.env -- Allow Extra env variables into the deployment
  env: []
  # querierFrontend.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querierFrontend.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querierFrontend.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # querierFrontend.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # querierFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}

tableManager:
  # tableManager.enabled -- Needed when using cassandra as index strogae!
  enabled: true
  # tableManager.replicaCount -- Number of replicas for the Table-manager deployment.
  replicaCount: 1
  # tableManager.resources -- Custom resources for the Table-manager deployment.
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  # tableManager.env -- Allow Extra env variables into the deployment
  env: []
  # tableManager.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # tableManager.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # tableManager.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # tableManager.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # tableManager.affinity -- Replace default affinity with custom affinity
  affinity: {}

canary:
  # canary.enabled -- Enable the Loki-Canary deployment
  enabled: false
  # canary.image -- Which image to use for Loki-Canary
  image: grafana/loki-canary:2.0.0
  # canary.resources -- Custom resources for the Loki-Canary deployment.
  resources: {}
  # canary.tolartions -- Add tolartions for pod assignment
  tolerations: []
  # canary.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # canary.affinity -- Replace default affinity with custom affinity
  affinity: {}
  # canary.args -- Allow extra arguments into the container.
  args: []
  # canary.env -- Allow Extra env variables into the deployment
  env: []

serviceMonitor:
  # serviceMonitor.enabled -- Enable service monitors for Loki deployment.
  enabled: false
  # serviceMonitor.interval -- Set interval scraping the targets.
  interval: ""
  # serviceMonitor.additionalLabels -- Set additional labels for the service monitor.
  additionalLabels: {}
  # serviceMonitor.scrapeTimeout -- Set time out for scraping.
  # scrapeTimeout: 10s